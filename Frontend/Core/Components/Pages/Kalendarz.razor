@page "/kalendarz"
<h3 class="text-center my-4">Twój plan dnia</h3>

<div class="container kalendarz-container">
    <!-- Górna sekcja wyboru miesiąca i przycisku odświeżania -->
    <div class="d-flex flex-wrap gap-2 justify-content-center mb-3 kalendarz-dni">
        <div class="input-group w-50">
            <span class="input-group-text bg-white border-end-0">
                <i class="bi bi-calendar3"></i>
            </span>
            <select class="form-select border-start-0" aria-label="Wybierz miesiąc">
                <option selected>Marzec</option>
                <option value="1">Kwiecień</option>
                <option value="2">Maj</option>
            </select>
        </div>
        <button class="btn btn-outline-secondary ms-3" title="Odśwież">
            <i class="bi bi-arrow-repeat"></i>
        </button>
    </div>

    <!-- Dni tygodnia -->
    <div class="d-flex justify-content-between mb-3 kalendarz-dni">
        @foreach (var day in dniTygodnia)
        {
            <button class="btn @((day == aktywnyDzien) ? "btn-aktywny-dzien" : "") px-3">
                <div class="fw-semibold">@day</div>
            </button>
        }
    </div>

    <!-- Lista zadań -->
    <div class="lista-zadan mt-4">
        @foreach (var wpis in wpisy.Select((value, index) => new { value, index }))
        {
            var wpisId = $"wpis{wpis.index}";
            <div class="card shadow-sm mb-3 @(wpis.value.Wazny ? "wpis-wazny" : "")">
                <div class="card-body d-flex align-items-center justify-content-between" data-bs-toggle="collapse" data-bs-target=@($"#{wpisId}") style="cursor: pointer;">
                    <div class="d-flex align-items-center">
                        <div class="me-3 godzina-wpisu" style="min-width: 70px;">@wpis.value.Godzina</div>
                        <div>
                            <div class="fw-semibold">@wpis.value.Typ</div>
                            <small class="text-muted">@wpis.value.Opis</small>
                        </div>
                    </div>
                    <div class="d-flex align-items-center">
                        <!-- Dzwoneczek powiadomienia -->
                        <button class="btn powiadomienie-btn" @onclick="() => ToggleNotification(wpis.index)">
                            <i class="bi bi-bell @((wpis.value.PowiadomienieAktywne) ? "text-success" : "text-secondary")" style="font-size: 1.5rem;"></i>
                        </button>
                        <button class="btn gwiazdka-btn" @onclick="(e => ToggleWazny(wpis.index))" title="Oznacz jako ważne">
                            <i class="bi @(wpis.value.Wazny ? "bi-star-fill text-warning" : "bi-star text-secondary")" style="font-size: 1.5rem;"></i>
                        </button>
                        <!-- Powiadomienie ustawione -->
                        @if (wpis.value.PowiadomienieAktywne)
                        {
                            <small class="text-success ms-2">Powiadomienie ustawione</small>
                        }
                    </div>
                </div>
                <div class="collapse px-4 py-2" id="@wpisId">
                    <div class="mb-1"><strong>Częstotliwość:</strong> @wpis.value.Czestotliwosc</div>
                    <div class="mb-1"><strong>Godziny podania:</strong> @string.Join(", ", wpis.value.GodzinyPodania)</div>
                    <div><strong>Notatka:</strong> @wpis.value.Notatka</div>
                    <div class="mt-3">
                        <button class="btn btn-outline-success" @onclick="() => SetNotificationTime(wpis.index)">Ustaw powiadomienie</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<!-- Do przeprojektowania/wdrożenia -->
@code {
    private string[] dniTygodnia = { "Nd 14", "Pn 15", "Wt 16", "Śr 17", "Cz 18", "Pt 19", "Sb 20" };
    private string aktywnyDzien = "Pn 15";

    private List<Wpis> wpisy = new()
    {
        new Wpis("8:00", "Ibuprofen (500mg)", "1 kapsułka", "co 8 godzin", new[] { "8:00", "16:00", "00:00" }, "Przyjąć po śniadaniu."),
        new Wpis("8:30", "Śniadanie", "350 Kcal", "-", new[] { "8:30" }, "Zawiera płatki, jogurt, banan."),
        new Wpis("12:00", "Lunch", "500 Kcal", "-", new[] { "12:00" }, "Lekki obiad – sałatka + zupa."),
        new Wpis("13:00", "Metformin (400mg)", "1 kapsułka", "co 12 godzin", new[] { "13:00", "01:00" }, "Nie przyjmować na czczo."),
        new Wpis("16:00", "Obiad", "650 Kcal", "-", new[] { "16:00" }, "Unikaj soli."),
        new Wpis("20:00", "Lisinopril (10mg)", "1 kapsułka", "codziennie", new[] { "20:00" }, "Kontrola ciśnienia.")
    };
    // Toggle powiadomienia
    private void ToggleNotification(int index)
    {
        var wpis = wpisy[index];
        wpis.PowiadomienieAktywne = !wpis.PowiadomienieAktywne;
    }

    // Ustawienie powiadomienia
    private void SetNotificationTime(int index)
    {
        // Tutaj możesz rozwinąć logikę ustawienia czasu powiadomienia, np. poprzez okno modalne.
        var wpis = wpisy[index];
        wpis.PowiadomienieUstawione = true;  
    }
    private void ToggleWazny(int index)
    {
        var wpis = wpisy[index];
        wpis.Wazny = !wpis.Wazny;
    }

    class Wpis
    {
        public string Godzina { get; set; }
        public string Typ { get; set; }
        public string Opis { get; set; }
        public string Czestotliwosc { get; set; }
        public string[] GodzinyPodania { get; set; }
        public string Notatka { get; set; }
        public bool Wazny { get; set; } = false;
        public bool PowiadomienieAktywne { get; set; } = false; 
        public bool PowiadomienieUstawione { get; set; } = false; 

        public Wpis(string godzina, string typ, string opis, string czestotliwosc, string[] godzinyPodania, string notatka)
        {
            Godzina = godzina;
            Typ = typ;
            Opis = opis;
            Czestotliwosc = czestotliwosc;
            GodzinyPodania = godzinyPodania;
            Notatka = notatka;

        }
    }
}
