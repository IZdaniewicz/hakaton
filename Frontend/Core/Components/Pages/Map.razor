@page "/map"
@inject IJSRuntime JS

<h3>Mapa piętra (SVG)</h3>

<!-- SVG -->
<div style="width: 100%; height: 600px; overflow: auto; border: 1px solid #ccc;">
	<object id="svgObject"
			type="image/svg+xml"
			data="/Images/map/map0.svg"
			style="min-width: 1000px; min-height: 800px;">
	</object>
</div>

<!-- Debug: ścieżka -->
<div id="labelOutput"
	 style="margin-top: 20px; padding: 10px; border: 1px solid #aaa; background-color: #f9f9f9;">
	<strong>Ścieżka do pliku:</strong> <span>@ImagePath</span>
</div>

<Core.Components.Dialogs.TemplatedDialog IsHidden="string.IsNullOrEmpty(ImagePath)" OnClose="CloseDialog">
	<div style="width: 100%;height: 100%; overflow: auto">
		<a-scene embedded style="width: 100%; height: 100%;">
			<a-sky src="@ImagePath"></a-sky>
		</a-scene>
	</div>

</Core.Components.Dialogs.TemplatedDialog>

<div id="view360">
</div>
@code {
	private string ImagePath { get; set; } = string.Empty;
	private DotNetObjectReference<Map>? ObjRef;

	[JSInvokable]
	public Task OnSvgCircleClicked(string path)
	{
		ImagePath = $"Images/map/spheres/{path}";
		StateHasChanged();
		return Task.CompletedTask;
	}


	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			ObjRef = DotNetObjectReference.Create(this);
			await JS.InvokeVoidAsync("attachSvgClickHandlers", ObjRef);
		}
	}

	private Task CloseDialog()
	{
		ImagePath = string.Empty;
		return Task.CompletedTask;
	}
}
<script>
			window.attachSvgClickHandlers = (dotnetHelper) => {
		const obj = document.getElementById("svgObject");
		if (!obj) return;

		obj.addEventListener("load", () => {
			const svgDoc = svgObject.contentDocument;
			if (!svgDoc) {
				console.warn("Nie można odczytać dokumentu SVG.");
				return;
			}

			const elements = svgDoc.querySelectorAll("circle");
			elements.forEach(el => {
				el.style.cursor = "pointer";
				el.addEventListener("click", () => {
					const label = el.getAttribute("inkscape:label");

					dotnetHelper.invokeMethodAsync("OnSvgCircleClicked", label);
				});
			});
		});
	};




</script>