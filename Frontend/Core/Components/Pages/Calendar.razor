@inherits Core.Components.BaseClassess.CustomComponentBase
@page "/kalendarz"
@using Microsoft.AspNetCore.Components.Web
@using Core.Components.Spinners

<h3 class="text-center my-4">Twój plan dnia</h3>

@if (IsDataLoaded)
{
	<div class="calendar-wrapper container">
		<div class="d-flex gap-2 justify-content-center align-items-center mb-3">
			<div class="input-group calendar-month-select">
				<span class="input-group-text">
					<i class="bi bi-calendar3"></i>
				</span>
				<InputSelect TValue="int"
							 Value="SelectedMonth"
							 ValueChanged="MonthChanged"
							 ValueExpression="@(() => SelectedMonth)"
							 class="form-select">
					@foreach (var month in Months)
					{
						<option value="@month.Key">@month.Value</option>
					}
				</InputSelect>
			</div>
			<button class="btn btn-outline-secondary" title="Odœwie¿" @onclick="RefreshData">
				<i class="bi bi-arrow-repeat"></i>
			</button>
		</div>

		<div id="calendar-scroll-days"
			 class="calendar-scroll-days"
			 @onmousedown="StartDrag"
			 @onmouseup="EndDrag"
			 @onmousemove="DragDays">
			@foreach (DateOnly day in DisplayedDateSpan.GetDaysBeetween())
			{
				<button id="day-@day.ToString("yyyy-MM-dd")" class="day-button @(day == SelectedDay ? "active" : "")"
						@onclick="() => SetSelectedDay(day)">
					<div>@GetDayString(day)</div>
				</button>
			}
		</div>

		<div class="task-list mt-4">
			@foreach (var calendarItem in CalendarItems.Where(x => DateOnly.FromDateTime(x.Time) == SelectedDay))
			{
				<div class="task-card">
					<div class="time">@calendarItem.Time.ToString("HH:mm")</div>
					<div class="content">
						<div class="name">@calendarItem.Title</div>
						<div class="description">@calendarItem.Description</div>
					</div>
					<div class="ms-auto d-flex align-items-center">
						<button class="btn notification-btn" title="Przypomnienie">
							<i class="bi bi-bell"></i>
						</button>
						<button class="btn star-btn ms-2" title="Oznacz jako wa¿ne">
							<i class="bi bi-star"></i>
						</button>
					</div>
				</div>
			}
		</div>
	</div>
}
else
{
	<Spinner />
}
