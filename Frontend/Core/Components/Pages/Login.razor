@page "/login"
@using Core.Components.Dialogs
@using Microsoft.AspNetCore.Components.Authorization
@using Core.Components.Spinners
@inject IJSRuntime JS

@inherits Core.Components.BaseClassess.CustomComponentBase

@if (IsLoading)
{
    <Spinner />
}
else
{
    <div class="login-container">
        <div class="glass-box elevated">
            <h3 class="text-center login-title">Zaloguj się</h3>

            <EditForm Model="LoginRequest" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />

                <!-- Email -->
                <label class="form-label">Adres e-mail</label>
                <div class="input-frame">
                    <InputText @bind-Value="LoginRequest.Email" class="form-control input-text" placeholder="np. jan@szpital.pl" />
                </div>
                <ValidationMessage For="@(() => LoginRequest.Email)" class="input-error" />

                <!-- Password -->
                <label class="form-label">Hasło</label>
                <div class="input-group input-frame">
                    <InputText @bind-Value="LoginRequest.Password" type="@PasswordFieldType" class="form-control input-text" placeholder="••••••••" />
                    <span class="input-group-text eye-icon" @onclick="TogglePasswordVisibility">
                        <i class="bi @(PasswordFieldType == "password" ? "bi-eye-slash" : "bi-eye")"></i>
                    </span>
                </div>
                <ValidationMessage For="@(() => LoginRequest.Password)" class="input-error" />

                <button type="submit" class="btn submit-btn">Zaloguj się</button>

                <div class="link-box">
                    <span>Nie masz konta?</span>
                    <a href="/rejestracja">Zarejestruj się</a>
                </div>
            </EditForm>
        </div>
    </div>

    <ErrorDialog Message="@ErrorMessage" IsHidden="IsHiddenErrorDialog" OnClose="CloseDialog" />
}