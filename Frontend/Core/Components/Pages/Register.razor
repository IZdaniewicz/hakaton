@inherits Core.Components.BaseClassess.CustomComponentBase
@page "/rejestracja"
@using Core.Components.Spinners
@using Core.Components.Dialogs

@if (IsLoading)
{
    <Spinner />
}
else
{
    <EditForm Model="FormModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />

        <div class="register-container">
            <div class="glass-box elevated">
                <img src="images/szpital_brzeziny_logo_uzupelniajace.png" alt="Logo" class="register-logo" />

                <h3 class="text-center register-title">Utwórz konto</h3>

                @* FirstName *@
                <label class="form-label">Imię</label>
                <div class="input-frame">
                    <InputText @bind-Value="FormModel.FirstName" class="form-control input-text" placeholder="Imię" />
                </div>
                <ValidationMessage For="@(() => FormModel.FirstName)" class="validation-message" />

                @* LastName *@
                <label class="form-label">Nazwisko</label>
                <div class="input-frame">
                    <InputText @bind-Value="FormModel.LastName" class="form-control input-text" placeholder="Nazwisko" />
                </div>
                <ValidationMessage For="@(() => FormModel.LastName)" class="validation-message" />

                @* BirthDate *@
                <label class="form-label">Data urodzenia</label>
                <div class="input-frame">
                    <InputDate @bind-Value="FormModel.BirthDate"
                               TValue="DateOnly?"
                               class="form-control input-text custom-date" />
                </div>
                <ValidationMessage For="@(() => FormModel.BirthDate)" class="validation-message" />

                @* Email *@
                <label class="form-label">Adres e-mail</label>
                <div class="input-frame">
                    <InputText @bind-Value="FormModel.Email" class="form-control input-text" placeholder="np. jan@szpital.pl" />
                </div>
                <ValidationMessage For="@(() => FormModel.Email)" class="validation-message" />

                @* Password *@
                <label class="form-label">Hasło</label>
                <div class="input-frame">
                    <InputText @bind-Value="FormModel.Password" type="password" class="form-control input-text" placeholder="••••••••" />
                </div>
                <ValidationMessage For="@(() => FormModel.Password)" class="validation-message" />

                @* Confirm Password *@
                <label class="form-label">Powtórz hasło</label>
                <div class="input-frame mb-3">
                    <InputText @bind-Value="FormModel.ConfirmPassword" type="password" class="form-control input-text" placeholder="••••••••" />
                </div>
                <ValidationMessage For="@(() => FormModel.ConfirmPassword)" class="validation-message" />

                <button type="submit" class="btn submit-btn">Zarejestruj się</button>

                <div class="text-center mt-3">
                    <span>Masz już konto? </span>
                    <a href="/login">Zaloguj się</a>
                </div>
            </div>
        </div>
    </EditForm>
}

<ErrorDialog Message="@ErrorMessage" IsHidden="@IsHiddenErrorDialog" OnClose="CloseDialog" />